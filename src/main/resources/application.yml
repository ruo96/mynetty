spring:
  application:
    name: mynetty
  mail:
#    host: smtp.exmail.qq.com
    host: smtp.qq.com
    port: 587
    username: 1303423055@qq.com
    password: mjrphmrfzcoebafe
    default-encoding: utf-8
    mail:
      smtp:
        socketFactory:
          class: javax.net.ssl.SSLSocketFactory
      debug: true
    #    protocol: smtp
    #    properties:
    #      mail:
    #        smtp:
    #          auth: true
    #          starttls:
    #            enable: true
    #            required: true
#    ssl: true
#    auth: true
#    timeout: 5000
    smtp:
      socketFactory:
        class: javax.net.ssl.SSLSocketFactory
        fallback: false
        port: 465
    ##REDIS配置
  redis:
#    database: 11
    host: 172.16.38.197
    password: bili@2233
#    pool:
#      max-wait: 5000
#      max-idle: 10
#      min-idle: 10
#      max-active: 50
    port: 6379
    lettuce:
      pool:
        max-active: 20
        min-idle: 10
        max-wait: 5000
        max-idle: 10
  encrypt:
    key: 1234567890123456

  # Spring message
  messages:
    encoding: utf-8
#    这个是因为没有配置到根目录下，所增加的相对路径
    basename: i18n/messages
#    表示 messages 文件的缓存失效时间，如果不配置则缓存一直有效。
    cache-duration: 3600

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://172.16.39.148:3306/data_center?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    username: root
    password: 1QWed$%&098pln@@_11
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      initial-size: 5
      min-idle: 10
      max-active: 20
      max-wait: 60000
      min-evictable-idle-time-millis: 300000     # 一个连接在池中最小生存的时间，单位是毫秒
      time-between-eviction-runs-millis: 60000   # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒
      filters: stat,wall                         # 配置扩展插件：stat-监控统计，log4j-日志，wall-防火墙（防止SQL注入），去掉后，监控界面的sql无法统计
      validation-query: SELECT 1                 # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
      test-on-borrow: true                       # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能
      test-on-return: true                       # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能
      test-while-idle: true                      # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能
      stat-view-servlet:
        enabled: true                            # 是否开启 StatViewServlet
        allow: 127.0.0.1                         # 访问监控页面 白名单，默认127.0.0.1
        deny: 192.168.56.1                       # 访问监控页面 黑名单
        login-username: admin                    # 访问监控页面 登陆账号
        login-password: admin                    # 访问监控页面 登陆密码
      filter:
        stat:
          enabled: true                          # 是否开启 FilterStat，默认true
          log-slow-sql: true                     # 是否开启 慢SQL 记录，默认false
          slow-sql-millis: 5000                  # 慢 SQL 的标准，默认 3000，单位：毫秒
          merge-sql: false                       # 合并多个连接池的监控数据，默认false

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
    virtual-host: /
    #必须配置这个，生产者才会确认回调
    publisher-confirms: true
    publisher-returns: true
    #重要，手动开启消费者ACK，控制消息在MQ中的删除、重发
    listener:
      simple:
        acknowledge-mode: manual
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      location: e:\\pic
  activemq:
    broker-url: tcp://localhost:61616
    in-memory: true
    pool:
      # 如果此处设置为true，需要添加activemq-pool的依赖包，否则会自动配置失败，无法注入JmsMessagingTemplate
      enabled: false
#  jms:
#    pub-sub-domain: true

  devtools:
    livereload:
      enabled: false

  security:
    user:
      name: wrh
      password: 123456

# 统一处理时间展示格式，不用代码中格式转换
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  thymeleaf:
    cache: false
    prefix: classpath:/templates/



server:
  port: 9988
#  servlet:
#    context-path: /mynetty

zipkin:
  serviceName: myzipkin
  url: http://127.0.0.1:9411
  connectTimeout: 6000
  readTimeout: 6000
  flushInterval: 1
  compressionEnabled: true

mybatis:
  typeAliasesPackage: com.wrh.bean
  mapperLocations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
#  type-handlers-package: 配置文件中指定Typehandler的包路径

# logging
logging:
  path: logs
  level:
    com.wrh.mapper: debug
    org.springframework: info
    com.wrh: info
    org.apache.ibatis.io.ResolverUtil: info

cq:
  key: aaabbbccc

redis:
  prefix: myown-

#原始数据kafka读取

  kafka:
    bootstrap-servers: 127.0.0.1:9092

    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1

    consumer:
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        session.timeout.ms: 15000
kafka:
  topic:
    group-id: default
    topic-name: default

param:
  juzhen1: 1,2,3
  juzhen2: 1.9,2.3,0.1
  list: aaa,bbb,ccc
  set: 111,222,333,111
  map1: '{"name":"zhangsan","sex":"male"}'
  map2: '{"math":"90","english":"85"}'

shiro:
#  开启shiro配置，默认true
  enabled: true
  #  开启shiro web 配置，默认true
  web:
    enabled: true
  loginUrl: /login
  successUrl: /index
  unauthorizedUrl: /unauthorized
  sessionManager:
    sessionIdCookieEnabled: true
    sessionIdUrlRewritingEnabled: true

#management:
#  endpoints:
#    web:
#      exposure:
#        include: metrics

demo:
  enable: false

# prometheus
#security:
#  user:
#    name: user
#    password: pwd
debug: true

jasypt:
  encryptor:
    password: 111

data:
  encrypt: ENC(4YOz0+Cu4hUBo6qBY4YEsg==)

# 多数据源属性配置
multi:
  dbs:
    db-a:
      driver-class-name: org.h2.Driver
      url: jdbc:h2:mem:dba;MODE=MYSQL;DATABASE_TO_UPPER=false;
    db-b:
      driver-class-name: org.h2.Driver
      url: jdbc:h2:mem:dbb;MODE=MYSQL;DATABASE_TO_UPPER=false;

test:
  config:
    elements:
      - value1
      - value2
      - value3
  autoconfig: 123

#management:
#  endpoints:
#    web:
#      exposure:
#        include: **
